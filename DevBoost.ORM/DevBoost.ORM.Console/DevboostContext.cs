// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DevBoost.ORM.App
{
    public partial class DevboostContext : DbContext
    {
        public DevboostContext()
        {
        }

        public DevboostContext(DbContextOptions<DevboostContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TbClube> TbClube { get; set; }
        public virtual DbSet<TbJogador> TbJogador { get; set; }
        public virtual DbSet<TbPosicao> TbPosicao { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=flavio-nb\\sqlexpress;Initial Catalog=DevBoost;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TbClube>(entity =>
            {
                entity.HasKey(e => e.IdClube)
                    .HasName("PK__Tb_Clube__8F48C643DBEB764E");

                entity.ToTable("Tb_Clube");

                entity.Property(e => e.IdClube).HasColumnName("Id_Clube");

                entity.Property(e => e.Clube)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TbJogador>(entity =>
            {
                entity.HasKey(e => e.IdJogador)
                    .HasName("PK__Tb_Jogad__5720AAD9F7C946B2");

                entity.ToTable("Tb_Jogador");

                entity.Property(e => e.IdJogador).HasColumnName("Id_Jogador");

                entity.Property(e => e.DataNascimento).HasColumnName("Data_Nascimento");

                entity.Property(e => e.IdClube).HasColumnName("Id_Clube");

                entity.Property(e => e.Nome)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdClubeNavigation)
                    .WithMany(p => p.TbJogador)
                    .HasForeignKey(d => d.IdClube)
                    .HasConstraintName("FK__Tb_Jogado__Id_Cl__1273C1CD");
            });

            modelBuilder.Entity<TbPosicao>(entity =>
            {
                entity.HasKey(e => e.IdPosicao)
                    .HasName("PK__Tb_Posic__0ABBBCDCBE6DAD9F");

                entity.ToTable("Tb_Posicao");

                entity.Property(e => e.IdPosicao).HasColumnName("Id_Posicao");

                entity.Property(e => e.IdJogador).HasColumnName("Id_Jogador");

                entity.Property(e => e.Posicao)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdJogadorNavigation)
                    .WithMany(p => p.TbPosicao)
                    .HasForeignKey(d => d.IdJogador)
                    .HasConstraintName("FK__Tb_Posica__Id_Jo__15502E78");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}